
cd 'C:\Users\chris\Desktop\CMS Docker\CMS Docker Teste BD MySQL Escal√°vel'

docker-compose down
docker-compose up -d --build 




apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysqldb01
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: mysqldb01
  template:
    metadata:
      labels:
        app: mysqldb01
    spec:
      schedulerName: stork
      containers:
      - name: mysql
        image: mysql:5.7
        imagePullPolicy: "Always"
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: xxxxxxxxxxxxxxxxxxxxxxxxx
        args:
        - --lower_case_table_names=1
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-data
        - name: mysql-custom-config
          mountPath: /etc/mysql/mysql.conf.d/custom.my.cnf
          subPath: my.custom.conf
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: px-mysql-db01-pvc
      - name: mysql-custom-config
        configMap:
          name: mysql-custom-config





Database Replication With Docker and Mariadb


docker run -dti -p 33306:3306 --name mariadb-master \
  -e MARIADB_ROOT_PASSWORD=zukaritas \
  -e MARIADB_REPLICATION_MODE=master \
  -e MARIADB_REPLICATION_USER=zuka \
  -e MARIADB_REPLICATION_PASSWORD=zukaritas \
  -e MARIADB_USER=zuka \
  -e MARIADB_PASSWORD=zukaritas \
  -e MARIADB_DATABASE=my_database \
  bitnami/mariadb:latest

  docker run -dti -p 33307:3306 --name mariadb-slave --link mariadb-master:master \
  -e MARIADB_REPLICATION_MODE=slave \
  -e MARIADB_REPLICATION_USER=zuka \
  -e MARIADB_REPLICATION_PASSWORD=zukaritas \
  -e MARIADB_MASTER_HOST=master \
  -e MARIADB_MASTER_ROOT_PASSWORD=zukaritas \
  bitnami/mariadb:latest



$ docker run --name mariadb-master \
  -e MARIADB_ROOT_PASSWORD=master_root_password \
  -e MARIADB_REPLICATION_MODE=master \
  -e MARIADB_REPLICATION_USER=my_repl_user \
  -e MARIADB_REPLICATION_PASSWORD=my_repl_password \
  -e MARIADB_USER=my_user \
  -e MARIADB_PASSWORD=my_password \
  -e MARIADB_DATABASE=my_database \
  bitnami/mariadb:latest


$ docker run --name mariadb-slave --link mariadb-master:master \
  -e MARIADB_REPLICATION_MODE=slave \
  -e MARIADB_REPLICATION_USER=my_repl_user \
  -e MARIADB_REPLICATION_PASSWORD=my_repl_password \
  -e MARIADB_MASTER_HOST=master \
  -e MARIADB_MASTER_ROOT_PASSWORD=master_root_password \
  bitnami/mariadb:latest





version: '2'

services:
  mariadb-master:
    image: 'bitnami/mariadb:latest'
    ports:
      - '3306'
    volumes:
      - /path/to/mariadb-persistence:/bitnami/mariadb
    environment:
      - MARIADB_REPLICATION_MODE=master
      - MARIADB_REPLICATION_USER=repl_user
      - MARIADB_REPLICATION_PASSWORD=repl_password
      - MARIADB_ROOT_PASSWORD=master_root_password
      - MARIADB_USER=my_user
      - MARIADB_PASSWORD=my_password
      - MARIADB_DATABASE=my_database
  mariadb-slave:
    image: 'bitnami/mariadb:latest'
    ports:
      - '3306'
    depends_on:
      - mariadb-master
    environment:
      - MARIADB_REPLICATION_MODE=slave
      - MARIADB_REPLICATION_USER=repl_user
      - MARIADB_REPLICATION_PASSWORD=repl_password
      - MARIADB_MASTER_HOST=mariadb-master
      - MARIADB_MASTER_PORT_NUMBER=3306
      - MARIADB_MASTER_ROOT_PASSWORD=master_root_password











$ docker run --name mysql-master \
  -e MYSQL_ROOT_PASSWORD=master_root_password \
  -e MYSQL_REPLICATION_MODE=master \
  -e MYSQL_REPLICATION_USER=my_repl_user \
  -e MYSQL_REPLICATION_PASSWORD=my_repl_password \
  -e MYSQL_USER=my_user \
  -e MYSQL_PASSWORD=my_password \
  -e MYSQL_DATABASE=my_database \
  bitnami/mysql:latest


 docker run --name mysql-slave --link mysql-master:master \
  -e MYSQL_REPLICATION_MODE=slave \
  -e MYSQL_REPLICATION_USER=my_repl_user \
  -e MYSQL_REPLICATION_PASSWORD=my_repl_password \
  -e MYSQL_MASTER_HOST=master \
  -e MYSQL_MASTER_ROOT_PASSWORD=master_root_password \
  bitnami/mysql:latest


version: '2'

services:
  mysql-master:
    image: 'bitnami/mysql:latest'
    ports:
      - '3306'
    volumes:
      - /path/to/mysql-persistence:/bitnami/mysql/data
    environment:
      - MYSQL_REPLICATION_MODE=master
      - MYSQL_REPLICATION_USER=repl_user
      - MYSQL_REPLICATION_PASSWORD=repl_password
      - MYSQL_ROOT_PASSWORD=master_root_password
      - MYSQL_USER=my_user
      - MYSQL_PASSWORD=my_password
      - MYSQL_DATABASE=my_database
  mysql-slave:
    image: 'bitnami/mysql:latest'
    ports:
      - '3306'
    depends_on:
      - mysql-master
    environment:
      - MYSQL_REPLICATION_MODE=slave
      - MYSQL_REPLICATION_USER=repl_user
      - MYSQL_REPLICATION_PASSWORD=repl_password
      - MYSQL_MASTER_HOST=mysql-master
      - MYSQL_MASTER_PORT_NUMBER=3306
      - MYSQL_MASTER_ROOT_PASSWORD=master_root_password


version: '2'

networks:
  app-tier:
    driver: bridge

services:
  mysql:
    image: 'bitnami/mysql:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - app-tier
  myapp:
    image: 'YOUR_APPLICATION_IMAGE'
    networks:
      - app-tier















----------------
common-services.yml

version: "2"
services:
    common_master_1:
        image: mysql:5.7.27
        container_name: ${MASTER_1_HOSTNAME}
        hostname: ${MASTER_1_HOSTNAME}
        volumes:
            - ../conf/master1.cnf:/etc/mysql/conf.d/my.cnf:ro
            - ../data/master1:/var/lib/mysql:rw
            - /usr/share/zoneinfo/:/usr/share/zoneinfo/:ro
        environment:
            MYSQL_ROOT_PASSWORD: ${MASTER_1_ROOT_PASSWORD}
        networks:
            replication_network:
                ipv4_address: ${MASTER_1_HOST_IP}
    common_slave_1:
        image: mysql:5.7.27
        container_name: ${SLAVE_1_HOSTNAME}
        hostname: ${SLAVE_1_HOSTNAME}
        volumes:
            - ../conf/slave1.cnf:/etc/mysql/conf.d/my.cnf:ro
            - ../data/slave1:/var/lib/mysql:rw
            - /usr/share/zoneinfo/:/usr/share/zoneinfo/:ro
        environment:
            MYSQL_ROOT_PASSWORD: ${SLAVE_1_ROOT_PASSWORD}
        networks:
            replication_network:
                ipv4_address: ${SLAVE_1_HOST_IP}
    common_master_2:
        container_name: ${MASTER_2_HOSTNAME}
        image: mysql:5.7.27
        hostname: ${MASTER_2_HOSTNAME}
        volumes:
            - ../conf/master2.cnf:/etc/mysql/conf.d/my.cnf:ro
            - ../data/master2:/var/lib/mysql:rw
            - /usr/share/zoneinfo/:/usr/share/zoneinfo/:ro
        environment:
            MYSQL_ROOT_PASSWORD: ${MASTER_2_ROOT_PASSWORD}
        networks:
            replication_network:
                ipv4_address: ${MASTER_2_HOST_IP}
    common_slave_2:
        image: mysql:5.7.27
        container_name: ${SLAVE_2_HOSTNAME}
        hostname: ${SLAVE_2_HOSTNAME}
        volumes:
            - ../conf/slave2.cnf:/etc/mysql/conf.d/my.cnf:ro
            - ../data/slave2:/var/lib/mysql:rw
            - /usr/share/zoneinfo/:/usr/share/zoneinfo/:ro
        environment:
            MYSQL_ROOT_PASSWORD: ${SLAVE_2_ROOT_PASSWORD}
        networks:
            replication_network:
                ipv4_address: ${SLAVE_2_HOST_IP}
    replication:
        image: ubuntu:18.04
        volumes:
            - ../scripts:${REPL_SCRIPT_MOUNT_PATH}
        networks:
            - replication_network
        environment:
            MASTER_1_HOSTNAME: ${MASTER_1_HOSTNAME}
            MASTER_1_HOST_IP: ${MASTER_1_HOST_IP}
            MASTER_1_ROOT_USER: ${MASTER_1_ROOT_USER}
            MASTER_1_ROOT_PASSWORD: ${MASTER_1_ROOT_PASSWORD}

            SLAVE_1_HOSTNAME: ${SLAVE_1_HOSTNAME}
            SLAVE_1_HOST_IP: ${SLAVE_1_HOST_IP}
            SLAVE_1_ROOT_USER: ${SLAVE_1_ROOT_USER}
            SLAVE_1_ROOT_PASSWORD: ${SLAVE_1_ROOT_PASSWORD}

            MASTER_2_HOSTNAME: ${MASTER_2_HOSTNAME}
            MASTER_2_HOST_IP: ${MASTER_2_HOST_IP}
            MASTER_2_ROOT_USER: ${MASTER_2_ROOT_USER}
            MASTER_2_ROOT_PASSWORD: ${MASTER_2_ROOT_PASSWORD}

            SLAVE_2_HOSTNAME: ${SLAVE_2_HOSTNAME}
            SLAVE_2_HOST_IP: ${SLAVE_2_HOST_IP}
            SLAVE_2_ROOT_USER: ${SLAVE_2_ROOT_USER}
            SLAVE_2_ROOT_PASSWORD: ${SLAVE_2_ROOT_PASSWORD}

            REPL_USER: ${REPL_USER}
            REPL_PASSWORD: ${REPL_PASSWORD}
        command: bash ${REPL_SCRIPT_MOUNT_PATH}/slave-2-master-2-master-2-slave.sh
    pma:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        hostname: phpmyadmin
        environment:
            - PMA_ARBITRARY=1
        restart: always
        ports:
            - 8080:80
        volumes:
            - /sessions
        networks:
            - replication_network


--------------

slave-2-master-2-master-2-slave.yml


version: "2"
services:
    master_1:
        extends:
            file: common-services.yml
            service: common_master_1
    slave_1:
        extends:
            file: common-services.yml
            service: common_slave_1
        depends_on:
            - master_1
    master_2:
        extends:
            file: common-services.yml
            service: common_master_2
    slave_2:
        extends:
            file: common-services.yml
            service: common_slave_2
        depends_on:
            - master_2
    replication:
        extends:
            file: common-services.yml
            service: replication
        depends_on:
            - master_1
            - slave_1
            - master_2
            - slave_2
        command: bash ${REPL_SCRIPT_MOUNT_PATH}/slave-2-master-2-master-2-slave.sh
    pma:
        extends:
            file: common-services.yml
            service: pma
        depends_on:
            - master_1
            - slave_1
            - master_2
            - slave_2
            - replication
networks:
    replication_network:
        ipam:
            config:
                - subnet: 10.208.0.0/16













common-functions.sh

Vishal Raj master master replication is working smooth
Latest commit 392816c on 3 Sep 2019
 History
 1 contributor
Executable File  105 lines (78 sloc)  3.53 KB
   
#! /bin/bash

function create_slave_replication_user_on_master() {
    MASTER_HOST_IP=$1
    MASTER_ROOT_USER=$2
    MASTER_ROOT_PASSWORD=$3

    SLAVE_HOST_IP=$4
    REPL_USER=$5
    REPL_PASSWORD=$6

    MYSQL_QUERY="CREATE USER '$REPL_USER'@'$SLAVE_HOST_IP' IDENTIFIED BY '$REPL_PASSWORD';"
    mysql --user="$MASTER_ROOT_USER" --password="$MASTER_ROOT_PASSWORD" --host="$MASTER_HOST_IP" -e "$MYSQL_QUERY"
}


function grant_replication_slave_permission_on_master() {
    MASTER_HOST_IP=$1
    MASTER_ROOT_USER=$2
    MASTER_ROOT_PASSWORD=$3
    REPL_USER=$4
    SLAVE_HOST_IP=$5

    MYSQL_QUERY="GRANT REPLICATION SLAVE ON *.* TO \"$REPL_USER\"@\"$SLAVE_HOST_IP\";"
    mysql --user="$MASTER_ROOT_USER" --password="$MASTER_ROOT_PASSWORD" --host="$MASTER_HOST_IP" -AN -e "$MYSQL_QUERY"
}

# Reload privileges for replication to take effect
function flush_privileges_for_replication_to_take_effect() {
    MASTER_HOST_IP=$1
    MASTER_ROOT_USER=$2
    MASTER_ROOT_PASSWORD=$3

    MYSQL_QUERY="FLUSH PRIVILEGES;"
    mysql --user="$MASTER_ROOT_USER" --password="$MASTER_ROOT_PASSWORD" --host="$MASTER_HOST_IP" -e "$MYSQL_QUERY"
}

function get_master_replication_file_and_position_and_update_slave () {
    MASTER_HOST_IP=$1
    MASTER_ROOT_USER=$2
    MASTER_ROOT_PASSWORD=$3

    SLAVE_HOST_IP=$4
    SLAVE_ROOT_USER=$5
    SLAVE_ROOT_PASSWORD=$6

    REPL_USER=$7
    REPL_PASSWORD=$8

    REPL_LOG_FILE=$(eval "mysql --user=$MASTER_ROOT_USER --password=$MASTER_ROOT_PASSWORD --host=$MASTER_HOST_IP -e 'SHOW MASTER STATUS\G' | grep File | sed -n -e 's/^.*: //p'")
    REPL_LOG_POSITION=$(eval "mysql --user=$MASTER_ROOT_USER --password=$MASTER_ROOT_PASSWORD --host=$MASTER_HOST_IP -e 'SHOW MASTER STATUS\G' | grep Position | sed -n -e 's/^.*: //p'")

    MYSQL_QUERY="CHANGE MASTER TO MASTER_HOST = '$MASTER_HOST_IP', MASTER_USER = '$REPL_USER', MASTER_PASSWORD = '$REPL_PASSWORD', MASTER_LOG_FILE = '$REPL_LOG_FILE', MASTER_LOG_POS = $REPL_LOG_POSITION;"
    mysql --user="$SLAVE_ROOT_USER" --password="$SLAVE_ROOT_PASSWORD" --host="$SLAVE_HOST_IP" -e "$MYSQL_QUERY"
}

function start_slave () {
    SLAVE_HOST_IP=$1
    SLAVE_ROOT_USER=$2
    SLAVE_ROOT_PASSWORD=$3

    MYSQL_QUERY="START SLAVE;"
    mysql --user="$SLAVE_ROOT_USER" --password="$SLAVE_ROOT_PASSWORD" --host="$SLAVE_HOST_IP" -e "$MYSQL_QUERY"
}

function check_slave_status() {
    SLAVE_HOST_IP=$1
    SLAVE_ROOT_USER=$2
    SLAVE_ROOT_PASSWORD=$3

    MYSQL_QUERY="SHOW SLAVE STATUS \G;"
    mysql --user="$SLAVE_ROOT_USER" --password="$SLAVE_ROOT_PASSWORD" --host="$SLAVE_HOST_IP" -e "$MYSQL_QUERY"
}


function setup_master_2_slave_replication() {
    MASTER_HOST_IP=$1
    MASTER_ROOT_USER=$2
    MASTER_ROOT_PASSWORD=$3

    SLAVE_HOST_IP=$4
    SLAVE_ROOT_USER=$5
    SLAVE_ROOT_PASSWORD=$6

    REPL_USER=$7
    REPL_PASSWORD=$8

    sleep 1
    create_slave_replication_user_on_master $MASTER_HOST_IP $MASTER_ROOT_USER $MASTER_ROOT_PASSWORD $SLAVE_HOST_IP $REPL_USER $REPL_PASSWORD

    sleep 1
    grant_replication_slave_permission_on_master $MASTER_HOST_IP $MASTER_ROOT_USER $MASTER_ROOT_PASSWORD $REPL_USER $SLAVE_HOST_IP

    sleep 1
    flush_privileges_for_replication_to_take_effect $MASTER_HOST_IP $MASTER_ROOT_USER $MASTER_ROOT_PASSWORD

    sleep 1
    get_master_replication_file_and_position_and_update_slave $MASTER_HOST_IP $MASTER_ROOT_USER $MASTER_ROOT_PASSWORD $SLAVE_HOST_IP $SLAVE_ROOT_USER $SLAVE_ROOT_PASSWORD $REPL_USER $REPL_PASSWORD

    sleep 1
    start_slave $SLAVE_HOST_IP $SLAVE_ROOT_USER $SLAVE_ROOT_PASSWORD

    sleep 1
    check_slave_status $SLAVE_HOST_IP $SLAVE_ROOT_USER $SLAVE_ROOT_PASSWORD
}











slave-2-master-2-master-2-slave.sh

Vishal Raj smms replication is working but somehow one of the slave is unable to‚Ä¶
‚Ä¶
Latest commit dab59f3 on 3 Sep 2019
 History
 1 contributor
Executable File  40 lines (28 sloc)  2.53 KB
   
#! /bin/bash

set -x

#######################################################################################################################
# Install the mysql client to connect to mysql nodes
#######################################################################################################################
apt-get -qq update
apt-get -qq install mysql-client -y --no-install-recommends


#######################################################################################################################
# Import common functions
#######################################################################################################################
BASEDIR=$(dirname "$0")
source $BASEDIR/common-functions.sh


#######################################################################################################################
# Setup replication from master1 to slave1
#######################################################################################################################
setup_master_2_slave_replication $MASTER_1_HOST_IP $MASTER_1_ROOT_USER $MASTER_1_ROOT_PASSWORD $SLAVE_1_HOST_IP $SLAVE_1_ROOT_USER $SLAVE_1_ROOT_PASSWORD $REPL_USER $REPL_PASSWORD


#######################################################################################################################
# Setup replication from master2 to slave2
#######################################################################################################################
setup_master_2_slave_replication $MASTER_2_HOST_IP $MASTER_2_ROOT_USER $MASTER_2_ROOT_PASSWORD $SLAVE_2_HOST_IP $SLAVE_2_ROOT_USER $SLAVE_2_ROOT_PASSWORD $REPL_USER $REPL_PASSWORD


#######################################################################################################################
# Setup replication from master1 to master2
#######################################################################################################################
setup_master_2_slave_replication $MASTER_1_HOST_IP $MASTER_1_ROOT_USER $MASTER_1_ROOT_PASSWORD $MASTER_2_HOST_IP $MASTER_2_ROOT_USER $MASTER_2_ROOT_PASSWORD $REPL_USER $REPL_PASSWORD


#######################################################################################################################
# Setup replication from master2 to master1
#######################################################################################################################
setup_master_2_slave_replication $MASTER_2_HOST_IP $MASTER_2_ROOT_USER $MASTER_2_ROOT_PASSWORD $MASTER_1_HOST_IP $MASTER_1_ROOT_USER $MASTER_1_ROOT_PASSWORD $REPL_USER $REPL_PASSWORD