version: "3.9" 

volumes:
  kong_data: {}

networks:
  kong-net:
    external: true
    name: kong-net
    #driver: bridge

services:

  #######################################
  # Kong database migration bootstrap
  #######################################
  kong-migrations:
    container_name: kong-migrations  
    image: "kong:2.3.2-alpine"  # kong:latest
    # user: root
    # command: >
    #   bash -c "apk add --no-cache curl git gcc musl-dev
    #   && luarocks install luaossl OPENSSL_DIR=/usr/local/kong CRYPTO_DIR=/usr/local/kong
    #   && kong migrations bootstrap 
    #   && kong migrations up 
    #   && kong migrations finish"
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db  # kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ERROR_LOG: /dev/stderr
    networks:
      - kong-net
    links:
      - db # kong-database
    depends_on:
      db:  # kong-database
        condition: service_healthy
    # depends_on:
    #   - db # kong-database
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  #######################################
  # Kong database migration up & finish
  #######################################
  kong-migrations-up:
    container_name: kong-migrations-up
    image: "kong:2.3.2-alpine"
    command: kong migrations up && kong migrations finish
    depends_on:
      - db # kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db # kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ERROR_LOG: /dev/stderr
    networks:
      - kong-net
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  #######################################
  # Postgres: The database used by Kong
  #######################################
  db:
    container_name: db  # kong-database
    image: postgres:9.5  # postgres:14.2  # postgres:latest
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      KONG_PROXY_ERROR_LOG: /dev/stderr
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    container_name: kong
    image: "kong:2.3.2-alpine"  # kong:latest # kong:2.8.0-alpine
    user: "kong"  # "root" # "kong"
    depends_on:  # kong-database
      db:
        condition: service_healthy
    # depends_on:
    #   - db # kong-database
    # command: >
    #   bash -c "apk add --no-cache curl git gcc musl-dev
    #   && luarocks install luaossl OPENSSL_DIR=/usr/local/kong CRYPTO_DIR=/usr/local/kong
    #   && kong start"
    environment:
      KONG_CASSANDRA_CONTACT_POINTS: db # kong-database
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db # kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
    networks:
      - kong-net
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"
      # - "8000:8000/tcp"
      # - "127.0.0.1:8001:8001/tcp"
      # - "8443:8443/tcp"
      # - "127.0.0.1:8444:8444/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    container_name: konga-prepare
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:kong@db:5432/konga_db"
    #command: "-c prepare -a postgres -u postgresql://kong:kong@kong-database:5432/konga"
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - db # kong-database

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    container_name: konga
    image: pantsel/konga:latest
    restart: always
    networks:
      - kong-net
    environment:
      DB_ADAPTER: postgres
      NODE_ENV: production
      # DB_URI: postgresql://kong:kong@kong-database:5432/konga
      DB_HOST: db
      DB_USER: kong
      DB_PASSWORD: kong
      TOKEN_SECRET: ahfdjgjgf79JKLFHJKh978953kgdfjkl
      DB_DATABASE: konga_db # konga
    depends_on:
      - db # kong-database
    ports:
      - "1337:1337"
