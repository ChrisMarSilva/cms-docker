
------------------------------

docker rm $(docker ps -a -q) -f  # matar todos os containers

docker-compose down
docker-compose up -d --build
docker-compose up -d


net stop winnat
docker start container_name
net start winnat

netstat -a -n -o | findstr :9300 | findstr LISTENING

------------------------------

konk
http://localhost:8001
http://localhost:8001/services


8000: escuta o HTTPtráfego de entrada de seus clientes e o encaminha para seus serviços upstream.
8001: a API Admin escuta chamadas da linha de comando sobre HTTP.
8443: escuta o tráfego HTTPS de entrada. Esta porta tem um comportamento semelhante ao 8000, exceto que espera HTTPS apenas tráfego. Esta porta pode ser desabilitada através do arquivo de configuração.
8444: a API Admin detecta o HTTPStráfego.

------------------------------

kong
http://localhost:1337


https://github.com/pantsel/konga

docker run -p 1337:1337 --network kong-net -e "TOKEN_SECRET=<TOKEN_SECRET>" -e "DB_ADAPTER=postgres" -e "DB_HOST=kong-database" -e "DB_PORT=5432" -e "DB_USER=kong" -e "DB_PASSWORD=kong" -e "DB_DATABASE=konga" -e "NODE_ENV=production" --name konga pantsel/konga

------------------------------


kibana  
  http://localhost:5601
  
elasticsearch 
  http://localhost:9200 
  http://localhost:9300

logstash 
  http://localhost:5000 
  http://localhost:9600

------------------------------


docker network create kong-net
docker run -d --name kong-database --network=kong-net -p 5432:5432 -e "POSTGRES_USER=kong" -e "POSTGRES_DB=kong" -e "POSTGRES_PASSWORD=kong" postgres:9.6
docker run --rm --network=kong-net -e "KONG_DATABASE=postgres" -e "KONG_PG_HOST=kong-database" -e "KONG_PG_PASSWORD=kong" -e "KONG_PASSWORD=test" kong/kong-gateway:2.7.1.2-alpine kong migrations bootstrap
docker run -d --name kong-gateway --network=kong-net -e "KONG_DATABASE=postgres" -e "KONG_PG_HOST=kong-database" -e "KONG_PG_USER=kong" -e "KONG_PG_PASSWORD=kong" -e "KONG_PROXY_ACCESS_LOG=/dev/stdout" -e "KONG_ADMIN_ACCESS_LOG=/dev/stdout" -e "KONG_PROXY_ERROR_LOG=/dev/stderr" -e "KONG_ADMIN_ERROR_LOG=/dev/stderr" -e "KONG_ADMIN_LISTEN=0.0.0.0:8001" -e "KONG_ADMIN_GUI_URL=http://localhost:8002" -p 8000:8000 -p 8443:8443 -p 8001:8001 -p 8444:8444 -p 8002:8002 -p 8445:8445 -p 8003:8003 -p 8004:8004 kong/kong-gateway:2.7.1.2-alpine

docker kill kong-gateway
docker kill kong-database
docker container rm kong-gateway
docker container rm kong-database
docker network rm kong-net

https://docs.konghq.com/gateway/2.7.x/get-started/quickstart/configuring-a-service/
https://github.com/trevorkennedy/kong_docker_demo
https://github.com/codeedu/apigateway-kong/blob/main/docker-kong/docker-compose.yaml

Add your Service using the Admin API

curl -i -X POST \
  --url http://localhost:8001/services/ \
  --data 'name=example-service' \
  --data 'url=http://mockbin.org'


 Add a Route for the Service

curl -i -X POST \
  --url http://localhost:8001/services/example-service/routes \
  --data 'hosts[]=example.com'

 Forward your requests through Kong

curl -i -X GET \
  --url http://localhost:8000/ \
  --header 'Host: example.com'



----------------------------------------------------


# Instalar base de datos Cassandra
docker run -d \
  --name kong-database \
  -p 9042:9042 \
  cassandra:3

# Ejecutar los script de migración de datos
docker run --rm \
    --link kong-database:kong-database \
    -e "KONG_DATABASE=cassandra" \
    -e "KONG_CASSANDRA_CONTACT_POINTS=kong-database" \
    kong kong migrations up

# Instalar Kong
docker run -d --name kong \
    --link kong-database:kong-database \
    -e "KONG_DATABASE=cassandra" \
    -e "KONG_CASSANDRA_CONTACT_POINTS=kong-database" \
    -e "KONG_PROXY_ACCESS_LOG=/dev/stdout" \
    -e "KONG_ADMIN_ACCESS_LOG=/dev/stdout" \
    -e "KONG_PROXY_ERROR_LOG=/dev/stderr" \
    -e "KONG_ADMIN_ERROR_LOG=/dev/stderr" \
    -e "KONG_ADMIN_LISTEN=0.0.0.0:8001" \
    -e "KONG_ADMIN_LISTEN_SSL=0.0.0.0:8444" \
    -p 8000:8000 \
    -p 8443:8443 \
    -p 8001:8001 \
    -p 8444:8444 \
    kong


docker run -p 1337:1337 \
             --link kong:kong \
             --name konga \
             -e "NODE_ENV=production" \
             pantsel/konga